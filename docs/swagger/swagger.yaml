basePath: /api/v1
definitions:
  models.Passageiro:
    properties:
      cpf:
        type: string
      email:
        type: string
      idPassageiro:
        type: integer
      nome:
        type: string
      senha:
        type: string
    type: object
  models.Voo:
    properties:
      capacidade:
        type: integer
      destino:
        type: string
      horaSaida:
        type: string
      idVoo:
        type: integer
    type: object
host: localhost
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server Petstore server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /login:
    post:
      responses:
        "200": {}
        "404":
          description: ok
          schema:
            type: string
  /passageiro:
    get:
      consumes:
      - application/json
      description: Retorna todos os passageiros cadastrados
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Passageiro'
            type: object
        "404":
          description: ok
          schema:
            type: string
      summary: Show a passageiro
    post:
      consumes:
      - application/json
      description: Metodo que cadastrar passageiro
      parameters:
      - description: IdPassageiro
        in: path
        name: idPassageiro
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200": {}
        "404":
          description: ok
          schema:
            type: string
      summary: Show a passageiro
    put:
      responses:
        "200": {}
        "404":
          description: ok
          schema:
            type: string
  /passageiro/{idPassageiro}:
    get:
      consumes:
      - application/json
      description: Retorna o passageiros cadastrado com base no idPassageiro passado
      parameters:
      - description: IdPassageiro
        in: path
        name: idVoo
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Passageiro'
            type: object
        "404":
          description: ok
          schema:
            type: string
      summary: Show a passageiro
  /voo:
    get:
      consumes:
      - application/json
      description: Retorna todos os voos cadastrados
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Voo'
            type: object
        "404":
          description: ok
          schema:
            type: string
      summary: Show a voo
    post:
      consumes:
      - application/json
      description: Metodo que cadastrar voos
      parameters:
      - description: IdVoo
        in: path
        name: idVoo
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200": {}
        "404":
          description: ok
          schema:
            type: string
      summary: Show a voo
    put:
      responses:
        "200": {}
        "404":
          description: ok
          schema:
            type: string
  /voo/{idVoo}:
    get:
      consumes:
      - application/json
      description: Retorna o voo cadastrado com base no idVoo passado
      parameters:
      - description: IdVoo
        in: path
        name: idVoo
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Voo'
            type: object
        "404":
          description: ok
          schema:
            type: string
      summary: Show a voo
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
